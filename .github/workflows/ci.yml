name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  tests:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y ffmpeg ripgrep atomicparsley

    - name: Install freyr
      run: npm install && npm link

    - name: Prep Testing Stage
      run: |
        mkdir -p ./CI/{spotify,apple_music,deezer}/{track,album,artist,playlist}

        cat << EOF > ./CI/prep.sh
          freyr() {
            script -qfc "freyr \$@" /dev/null | tee .freyr_log
          }

          exec_retry() {
            cmd="\$(cat)" && attempts=1
            until eval "\$cmd"; do
              echo "::warning::Attempt \$attempts failed."
              if (( ++attempts > 3 )); then return 1; fi
            done
            tree -sh
          }

          RG_SRC="\$(which rg)"
          rg() {
            echo "rg: pattern: [\$@]"
            \$RG_SRC --fixed-strings --passthru "\$@"
            if [[ \$? != 0 ]]; then
              echo "::error::rg: failed to match"
              return 1
            fi
          }
        EOF

    - name: Spotify - Download Track
      run: |
        . ./CI/prep.sh && cd ./CI/spotify/track

        exec_retry << EOF
          freyr https://open.spotify.com/track/5FNS5Vj69AhRGJWjhrAd01
          cat .freyr_log \
            | rg "[•] Collation Complete" \
            | rg "[•] Total tracks: [01]" \
            | rg "✕ Failed:  [00]" > /dev/null
        EOF

    - name: Spotify - Download Album
      run: |
        . ./CI/prep.sh && cd ./CI/spotify/album

        exec_retry << EOF
          freyr https://open.spotify.com/album/2D23kwwoy2JpZVuJwzE42B
          cat .freyr_log \
            | rg "[•] Collation Complete" \
            | rg "[•] Total tracks: [04]" \
            | rg "✕ Failed:  [00]" > /dev/null
        EOF

    # - name: Spotify - Download Artist
    # - name: Spotify - Download Playlist

    - name: Apple Music - Download Track
      run: |
        . ./CI/prep.sh && cd ./CI/apple_music/track

        exec_retry << EOF
          freyr https://music.apple.com/us/album/elio-irl/1547735824?i=1547736100
          cat .freyr_log \
            | rg "[•] Collation Complete" \
            | rg "[•] Total tracks: [01]" \
            | rg "✕ Failed:  [00]" > /dev/null
        EOF

    - name: Apple Music - Download Album
      run: |
        . ./CI/prep.sh && cd ./CI/apple_music/album

        exec_retry << EOF
          freyr https://music.apple.com/us/album/im-sorry-im-not-sorry-ep/1491795443
          cat .freyr_log \
            | rg "[•] Collation Complete" \
            | rg "[•] Total tracks: [04]" \
            | rg "✕ Failed:  [00]" > /dev/null
        EOF

    # - name: Apple Music - Download Artist
    # - name: Apple Music - Download Playlist

    - name: Deezer - Download Track
      run: |
        . ./CI/prep.sh && cd ./CI/deezer/track

        exec_retry << EOF
          freyr https://www.deezer.com/en/track/1189202982
          cat .freyr_log \
            | rg "[•] Collation Complete" \
            | rg "[•] Total tracks: [01]" \
            | rg "✕ Failed:  [00]" > /dev/null
        EOF

    - name: Deezer - Download Album
      run: |
        . ./CI/prep.sh && cd ./CI/deezer/album

        exec_retry << EOF
          freyr https://www.deezer.com/en/album/123330212
          cat .freyr_log \
            | rg "[•] Collation Complete" \
            | rg "[•] Total tracks: [04]" \
            | rg "✕ Failed:  [00]" > /dev/null
        EOF

    # - name: Deezer - Download Artist
    # - name: Deezer - Download Playlist

  docker_build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: Build
      run: docker build -t freyrcli/freyrjs .
