name: test

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  spotify:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: Install Dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y ffmpeg ripgrep atomicparsley

    - uses: actions/cache@v2
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-

    - name: Install Freyr
      run: npm ci && npm link

    - name: Prep Testing Stage
      run: mkdir -p ./CI/spotify/{track,album,artist,playlist}

    - name: Spotify - Download Track
      run: |
        . .github/workflows/ci-prep.sh && cd ./CI/spotify/track

        exec_retry << EOF
          freyr https://open.spotify.com/track/5FNS5Vj69AhRGJWjhrAd01
          validate \
            "[•] Total tracks: [01]" \
            "✓ Passed:  [01]" \
            "✕ Failed:  [00]"
        EOF

    - name: Spotify - Download Album
      run: |
        . .github/workflows/ci-prep.sh && cd ./CI/spotify/album

        exec_retry << EOF
          freyr https://open.spotify.com/album/2D23kwwoy2JpZVuJwzE42B
          validate \
            "[•] Total tracks: [04]" \
            "✓ Passed:  [04]" \
            "✕ Failed:  [00]"
        EOF

    - name: Spotify - Download Artist
      run: |
        . .github/workflows/ci-prep.sh && cd ./CI/spotify/artist

        exec_retry << EOF
          freyr https://open.spotify.com/artist/4adSXA1GDOxNG7Zw89YHyz \
            -l album=\"the rainbow cassette\" \
            -l album=\"make believe\"
          validate \
            "✓ Passed:  [10]" \
            "✕ Failed:  [00]"
        EOF

    - name: Spotify - Download Playlist
      run: |
        . .github/workflows/ci-prep.sh && cd ./CI/spotify/playlist

        exec_retry << EOF
          freyr https://open.spotify.com/playlist/5KcCGEx7fFqXYNiJkSQ5KT
          validate \
            "✓ Passed:  [05]" \
            "✕ Failed:  [00]"
        EOF

  apple_music:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: Install Dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y ffmpeg ripgrep atomicparsley

    - uses: actions/cache@v2
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-

    - name: Install Freyr
      run: npm ci && npm link

    - name: Prep Testing Stage
      run: mkdir -p ./CI/apple_music/{track,album,artist,playlist}

    - name: Apple Music - Download Track
      run: |
        . .github/workflows/ci-prep.sh && cd ./CI/apple_music/track

        exec_retry << EOF
          freyr https://music.apple.com/us/album/elio-irl/1547735824?i=1547736100
          validate \
            "[•] Total tracks: [01]" \
            "✓ Passed:  [01]" \
            "✕ Failed:  [00]"
        EOF

    - name: Apple Music - Download Album
      run: |
        . .github/workflows/ci-prep.sh && cd ./CI/apple_music/album

        exec_retry << EOF
          freyr https://music.apple.com/us/album/im-sorry-im-not-sorry-ep/1491795443
          validate \
            "[•] Total tracks: [04]" \
            "✓ Passed:  [04]" \
            "✕ Failed:  [00]"
        EOF

    - name: Apple Music - Download Artist
      run: |
        . .github/workflows/ci-prep.sh && cd ./CI/apple_music/artist

        exec_retry << EOF
          freyr https://music.apple.com/us/artist/mazie/1508029053 \
            -l album=\"the rainbow cassette\" \
            -l album=\"make believe\"
          validate \
            "✓ Passed:  [10]" \
            "✕ Failed:  [00]"
        EOF

    - name: Apple Music - Download Playlist
      run: |
        . .github/workflows/ci-prep.sh && cd ./CI/apple_music/playlist

        exec_retry << EOF
          freyr https://music.apple.com/us/playlist/songs-from-up-next-bazzi/pl.56c4bdf909954beca0cf69379a48144f
          validate \
            "✓ Passed:  [06]" \
            "✕ Failed:  [00]"
        EOF

  deezer:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: Install Dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y ffmpeg ripgrep atomicparsley

    - uses: actions/cache@v2
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-

    - name: Install Freyr
      run: npm ci && npm link

    - name: Prep Testing Stage
      run: mkdir -p ./CI/deezer/{track,album,artist,playlist}

    - name: Deezer - Download Track
      run: |
        . .github/workflows/ci-prep.sh && cd ./CI/deezer/track

        exec_retry << EOF
          freyr https://www.deezer.com/en/track/1189202982
          validate \
            "[•] Total tracks: [01]" \
            "✓ Passed:  [01]" \
            "✕ Failed:  [00]"
        EOF

    - name: Deezer - Download Album
      run: |
        . .github/workflows/ci-prep.sh && cd ./CI/deezer/album

        exec_retry << EOF
          freyr https://www.deezer.com/en/album/123330212
          validate \
            "[•] Total tracks: [04]" \
            "✓ Passed:  [04]" \
            "✕ Failed:  [00]"
        EOF

    - name: Deezer - Download Artist
      run: |
        . .github/workflows/ci-prep.sh && cd ./CI/deezer/artist

        exec_retry << EOF
          freyr https://www.deezer.com/en/artist/14808825 \
            -l album=\"the rainbow cassette\" \
            -l album=\"make believe\"
          validate \
            "✓ Passed:  [10]" \
            "✕ Failed:  [00]"
        EOF

    - name: Deezer - Download Playlist
      run: |
        . .github/workflows/ci-prep.sh && cd ./CI/deezer/playlist

        exec_retry << EOF
          freyr https://www.deezer.com/en/playlist/10004168842
          validate \
            "✓ Passed:  [05]" \
            "✕ Failed:  [00]"
        EOF


  docker:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: Test Docker Build
      run: docker build -t freyrcli/freyrjs .
